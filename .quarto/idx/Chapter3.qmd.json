{"title":"Chapter3","markdown":{"yaml":{"title":"Chapter3","format":{"html":{"code-fold":false,"code-tools":true}},"editor":"source","author":"Lilla Gurtner","editor_options":{"chunk_output_type":"console"}},"headingText":"knitr global options ----","containsRefs":false,"markdown":"\n\n```{r setup, echo = F, message = F, error=F, include = F}\n\nknitr::opts_chunk$set(fig.pos = 'H',\n                      echo = T,\n                      message = F,\n                      warning = F, \n                      dpi = 600,\n                      fig.align = \"center\", \n                      fig.asp = 0.62) # golden ratio\n\nlibrary(tidyverse)\nlibrary(tidybayes) # nice ploting\nlibrary(brms)\nlibrary(wesanderson)\n\ntheme_set(theme_tidybayes())\n\n```\n\n\nThe Easy problems use the samples from the posterior distribution for the globe tossing example. This code will give you a specific set of samples, so that you can check your answers exactly. Use the values in samples to answer the questions that follow.\n\n\n```{r data4easy}\n# hypothezised_p_of_water is a sequence of all possible values from percentage of water on planet\nn_water = 6\nn_tosses = 9\n\nd_e <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out = 1000),\n           prior  = 1) |> # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = hypothezised_p_of_water)) |>  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) |> # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\n\nn_samples <- 10000\nset.seed(100)\n\nsamples_e <- d_e |> \n  sample_n(size = n_samples, weight = posterior, replace = T) # sampling entire lines from d_e. the \"posterior\" argument gives every line in d_e the probability of being chosen for the samples tibble\n\n\n\nd_e |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n\nsamples_e |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line() # samples for the easy questions\n\n```\n\n\nThe two distributions look similar. However, as `n_samples` becomes small, the shape of samples$posterior becomes less smooth.\n\n# 3E1. \nHow much posterior probability lies below p = 0.2? \n```{r}\nsamples_e |> \n  filter(hypothezised_p_of_water < 0.2) |>  # all the p's < 0.2\n  summarise(perc_p = n()/n_samples) # get percentage of all p's < 0.2\n```\n\n\n# 3E2. \nHow much posterior probability lies above p = 0.8? \n\n```{r}\nsamples_e |> \n  filter(hypothezised_p_of_water > 0.8) |>  \n  summarise(perc_p = n()/n_samples)\n\n```\n\n# 3E3. \nHow much posterior probability lies between p = 0.2 and p = 0.8? \n```{r}\n\nsamples_e |> \n  filter(hypothezised_p_of_water < 0.8 & hypothezised_p_of_water > 0.2) |> \n  summarise(perc_p = n()/n_samples)\n\n# or:\nsamples_e |> \n  filter(between(hypothezised_p_of_water, 0.2, 0.8)) |> \n  summarise(perc_p = n()/n_samples)\n\n```\n\n\n# 3E4. \n20% of the posterior probability lies below which value of p? \n```{r}\nquantile(samples_e$hypothezised_p_of_water, probs = 0.2)\n```\n\n\n#3E5. \n20% of the posterior probability lies above which value of p? \n```{r}\n\nquantile(samples_e$hypothezised_p_of_water, probs = 0.8)\n```\n\n\n# 3E6. \nWhich values of p contain the narrowest interval equal to 66% of the posterior probability? \n\n```{r}\nmode_hdi(samples_e$hypothezised_p_of_water, .width = 0.66)\n```\n\n\n# 3E7. \nWhich values of p contain 66% of the posterior probability, assuming equal posterior probability both below and above the interval?\n\n```{r}\n# 33% of the posterior must be outside, 17.5% on each side of the distribution\nquantile(samples_e$hypothezised_p_of_water, probs = c(0.175, .825))\n```\n\n\n# 3M1.\nSuppose the globe tossing data had turned out to be 8 water in 15 tosses. Construct the posterior distribution, using grid approximation. Use the same flat prior as before. \n\n```{r}\n# hypothezised_p_of_water is a sequence of all possible values from percentage of water on planet\nn_water = 8\nn_tosses = 15\n\nd_m <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out = 1000),\n           prior  = 1) |> # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = hypothezised_p_of_water)) |>  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) |> # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\nd_m |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n```\n\n\n# 3M2. \nDraw 10,000 samples from the grid approximation from above. Then use the samples to calculate the 90% HPDI for p. \n\n```{r}\nn_samples <- 10000\nset.seed(100)\n\nsamples_m <- d_m %>% \n  sample_n(size = n_samples, weight = posterior, replace = T)\n\n\nmode_hdi(samples_m$hypothezised_p_of_water, .probs = c(0.05, 0.95))\n\nsamples_m |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n\n```\n\n# 3M3. \nConstruct a posterior predictive check for this model and data. This means simulate the distribution of samples, averaging over the posterior uncertainty in p. What is the probability of observing 8 water in 15 tosses?\n\n=> here, we use code from Solomon Kurz' translation of the textbook, [section 3.3.2](https://bookdown.org/content/4857/sampling-the-imaginary.html#sampling-to-simulate-prediction)\n\n```{r}\nn_dummy_water <- tibble(n_waters = rbinom(n_samples, # same size in samples_m\n                                          size = n_tosses, # 15\n                                          prob = samples_m$hypothezised_p_of_water)) # create 10000 simulated observed water in n_tosses, with the actual percentage of water coming from the p's sampled proportionally from the posterior \n\n\n# how many of the dummy-data results show 8 waters in 15 tosses?\nmean(n_dummy_water$n_waters == 8)\n\n\nn_dummy_water %>% \n  ggplot(aes(x = n_waters)) +\n  geom_histogram(binwidth = 1, center = 0,\n                 color = \"grey92\") +\n  scale_x_continuous(\"dummy water count\") +\n  ylab(\"frequency\") \n\n```\n\n# 3M4. \nUsing the posterior distribution constructed from the new (8/15) data, now calculate the probability of observing 6 water in 9 tosses.\n\n\n```{r}\nn_dummy_water <- tibble(n_waters = rbinom(n_samples, # same size in samples_m\n                                          size = 9, # 15\n                                          prob = samples_m$hypothezised_p_of_water)) # create 10000 simulated observed water in n_tosses, with the actual percentage of water coming from the p's sampled proportionally from the posterior \n\n\n# how many of the dummy-data results show 6 waters in 9 tosses, but taking the posterior from the 8/15 data?\nmean(n_dummy_water$n_waters == 6)\n\n\nn_dummy_water %>% \n  ggplot(aes(x = n_waters)) +\n  geom_histogram(binwidth = 1, center = 0,\n                 color = \"grey92\") +\n  scale_x_continuous(\"dummy water count\") +\n  ylab(\"frequency\") \n```\n\n# 3M5\nStart over at 3M1, but now use a prior that is zero below p = 0.5 and a constant above p = 0.5. This corresponds to prior information that a majority of the Earthâ€™s surface is water. Repeat each problem above and compare the inferences (using both priors) to the true value p = 0.7.\n\n```{r 3m5}\nn_water = 8\nn_tosses = 15\n\nd_m2 <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out = 1000),\n           prior  = case_when(hypothezised_p_of_water < 0.5 ~ 0, \n                              hypothezised_p_of_water >= 0.5 ~ 0.1)) %>%                                       # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = hypothezised_p_of_water)) %>%  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) %>%             # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\nn_samples <- 10000\nset.seed(3)\n\nsamples_m2 <- d_m2 %>% \n  sample_n(size = n_samples, weight = posterior, replace = T)\n\n# re-doing also the easy ones, for the sake of completeness\n#: post-prob < 0.2\nmean(samples_m2$hypothezised_p_of_water < 0.2)\n\nmean(samples_m2$hypothezised_p_of_water > 0.8)\n\nmean(between(samples_m2$hypothezised_p_of_water, left = 0.2, right = 0.8))\n\nquantile(samples_m2$hypothezised_p_of_water, probs = 0.2)\nmode_hdi(samples_m2$hypothezised_p_of_water, .width = .66)\n\nquantile(samples_m2$hypothezised_p_of_water, probs = c(0.175, 0.825))\n\n# Draw 10,000 samples from the grid approximation from above. Then use the sample to calculate the 90% HPDI for p.\n\nmode_hdi(samples_m2$hypothezised_p_of_water, .width = 0.9)\n\n# Construct a posterior predictive check for this model and data. The means simulate the distribution of samples, averaging over the posterior uncertainty in p. What is the probability of observing 8 water in 15 tosses?\n\ndummy_tosses <- rbinom(1000, 15, prob = samples_m2$hypothezised_p_of_water)\n\nmean(dummy_tosses == 8)\n\n\n# Using the posterior distribution constructed from the new (8/15) data, now calculate the probability of observing 6 water in 9 tosses.\n\ndummy_tosses <- rbinom(1000, 9, prob = samples_m2$hypothezised_p_of_water)\n\nmean(dummy_tosses == 6)\n\nd_m2 |>  ggplot(aes(x = hypothezised_p_of_water, y= posterior))  + geom_line()\nhist(samples_m2$hypothezised_p_of_water)\n\n```\n\n# 3M6. \n\nSuppose you want to estimate the Earth's proportion of water very precisely. Specifically, you want the 99% percentile interval of the posterior distribution of p to be only 0.05 wide. This means the distance between the upper and lower bound of the interval should be 0.05. How many times will you have to toss the globe to do this?\n\n```{r}\n# strategy: trying out until the mode_hdi is as small as required\n#generating the \"real\" data\nn_tosses <- 2201 # play around with this number\nn_water <- rbinom(1, n_tosses, prob = 0.7) # fake observations of earth\n\n# getting posterior => best guess of proportion\nd_m3 <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out =1000), \n            prior = 1, \n            likelyhood = dbinom(n_water, n_tosses, prob = hypothezised_p_of_water), \n            posterior = likelyhood*prior / (sum(likelyhood*prior)))\n\n# sampling from the posterior to simulate redoing the experiment 10000 times\nsamples_m3 <- sample(d_m3$hypothezised_p_of_water,size = 10000, prob = d_m3$posterior, replace = T )\n\n\n# what is the 99% hdi?\na <- mode_hdi(samples_m3, .width = 0.99)\na$ymax - a$ymin\n```\n\n\n\n# 3H1.\nUsing grid approximation, compute the posterior distribution for the probability of a birth being a boy. Assume a uniform prior probability. Which parameter value maximizes the posterior probability?\n\n```{r hard data}\nbirth1 <- c(1,0,0,0,1,1,0,1,0,1,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,0, 0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0, 1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,1,1,0, 1,0,1,1,1,0,1,1,1,1) \n\nbirth2 <- c(0,1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0, 1,1,1,0,1,1,1,0,1,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,0,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,1, 0,0,0,1,1,1,0,0,0,0)\n\nall_births <- c(birth1, birth2)\n\n```\n\n\n```{r}\n\nn_births <- length(all_births)\nn_boys <- sum(birth1) + sum(birth2)\n\nd_h <- tibble(p_boy_hypothetical = seq(from = 0, \n                                     to  = 1,\n                                     length.out = 1000), \n            prior_boy = 0.01, \n            likelyhood = dbinom(x = n_boys, \n                                size = n_births, \n                                prob = p_boy_hypothetical), \n            post_unst = likelyhood * prior_boy, \n            standartization_term = sum(likelyhood * prior_boy),\n            posterior = post_unst / standartization_term)\n\n\n# Which parameter value maximizes the posterior probability?\nd_h |> filter(posterior == max(d_h$posterior))\n\n\nd_h |> pivot_longer(names_to = \"value_name\", values_to = \"value\", 2:6) |> \n  ggplot(aes(x = p_boy_hypothetical, y = value, color = value_name)) + geom_point()+\n  scale_color_manual(values = wes_palette(\"Darjeeling2\", n = 5, type = \"discrete\"))\n```\n\n# 3H2.\nUsing the sample function, draw 10,000 random parameter values from the posterior distribution you calculated above. Use these samples to estimate the 50%, 89%, and 97% highest posterior density intervals.\n\n```{r}\nsamples_h <- sample(d_h$p_boy_hypothetical, size = 1e4, prob = d_h$posterior, replace = T)\n\nmode_hdi(samples_h, .width = c(0.5, 0.89, 0.97))\n```\n\n\n#3H3. \nUse rbinom to simulate 10,000 replicates of 200 births. You should end up with 10,000 numbers, each one a count of boys out of 200 births. Compare the distribution of predicted numbers of boys to the actual count in the data (111 boys out of 200 births). There are many good ways to visualize the simulations, but the dens command (part of the rethinking package) is probably the easiest way in this case. Does it look like the model fits the data well? That is, does the distribution of predictions include the actual observation as a central, likely outcome?\n\n```{r}\n#simulating 10'000 cohorts 200 births to get the number of births from the posterior of estimations of the most likely true percentage of boys\ndummy_data_n_boys<- rbinom(1e5, size = 200, prob = samples_h)\n\nbreak_func <- function(x) {\n  length(seq(min(x), max(x), by = 1)) + 1\n}\n\nggplot() + \n  stat_histinterval(aes(x = dummy_data_n_boys), .width = c(0.66, 0.89), breaks = break_func) +\n  geom_vline(aes(xintercept = n_boys), linetype = \"dashed\", color = \"red\") +\n  labs(x = \"Number of Boys\", y = \"Density\")\n```\n\n# 3H4.\n\nNow compare 10,000 counts of boys from 100 simulated first borns only to the number of boys in the first births, birth1. How does the model look in this light?\n\n```{r}\n\ndummy_data_n_boys<- rbinom(1e5, size = 100, prob = samples_h)\n\nbreak_func <- function(x) {\n  length(seq(min(x), max(x), by = 1)) + 1\n}\n\nggplot() + stat_histinterval(aes(x = dummy_data_n_boys), .width = c(0.66, 0.89), breaks = break_func) +\n  geom_vline(aes(xintercept = sum(birth1)), linetype = \"dashed\", color = \"red\") +\n  labs(x = \"Number of Boys\", y = \"Density\")\n\n```\n\n\n# 3H5.\n\nThe model assumes that sex of first and second births are independent. To check this assumption, focus now on second births that followed female first borns. Compare 10,000 simulated counts of boys *(coming from the original model which assumes independence)* to only those second births that followed girls. To do this correctly, you need to count the number of first borns who were girls and simulate that many births, 10,000 times. Compare the counts of boys in your simulations to the actual observed count of boys following girls. How does the model look in this light? Any guesses what is going on in these data?\n\n```{r}\ndummy_data_n_boys<- rbinom(1e5, size = 100, prob = samples_h)\n\nn_girl1 <- sum(birth1 == 0)\n\ndummy_data_boys_after_girls <- rbinom(n = 1e5, size = n_girl1, prob = samples_h)\n\nbirths_data <- tibble(birth1 = birth1, \n                      birth2 = birth2) |> \n  mutate(boy_after_girl = case_when(birth1 == 0 & birth2 == 1 ~ 1, \n                                    .default = 0))\n\ntrue_n_boys_after_girl <- sum(births_data$boy_after_girl)\n\nggplot() +\n   geom_histogram(aes(x = dummy_data_boys_after_girls))  + \n  geom_vline(xintercept = true_n_boys_after_girl)\n\n```\n\nConclusion: The model, assuming independence (i.e. drawing from the posterior of all the births `sample_h`) would predict much fewer boys in the second births. So either having a girl alters something biological such that conception of boys becomes more likely, or families who have already a girls are more likely to abort female fetuses and keep the male ones more often. \n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Chapter3.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"source","theme":"yeti","title":"Chapter3","author":"Lilla Gurtner","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}}}