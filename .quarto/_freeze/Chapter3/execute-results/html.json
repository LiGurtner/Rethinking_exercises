{
  "hash": "23bc9525780f3d638826e8fdd2254660",
  "result": {
    "markdown": "---\ntitle: \"Chapter3\"\nformat: \n  html:\n    code-fold: false\n    code-tools: true\neditor: source\nauthor: Lilla Gurtner\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\nThe Easy problems use the samples from the posterior distribution for the globe tossing example. This code will give you a specific set of samples, so that you can check your answers exactly. Use the values in samples to answer the questions that follow.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# p_grid is a sequence of all possible values from percentage of water on planet\nn_water = 6\nn_tosses = 9\n\nd <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out = 1000),\n           prior  = 1) |> # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = hypothezised_p_of_water)) |>  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) |> # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\n\nn_samples <- 10000\nset.seed(100)\n\nsamples <- d |> \n  sample_n(size = n_samples, weight = posterior, replace = T) # sampling entire lines from d\n\n\n\nd |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/data4easy-1.png){fig-align='center' fig-pos='H' width=4200}\n:::\n\n```{.r .cell-code}\nsamples |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/data4easy-2.png){fig-align='center' fig-pos='H' width=4200}\n:::\n:::\n\n\n\nThe two distributions look similar. However, as `n_samples` becomes small, the shape of samples$posterior becomes less smooth.\n\n# 3E1. \nHow much posterior probability lies below p = 0.2? \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsamples |> \n  filter(hypothezised_p_of_water < 0.2) |>  # all the p's < 0.2\n  summarise(perc_p = n()/n_samples) # get percentage of all p's < 0.2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1 0.0004\n```\n:::\n:::\n\n\n\n# 3E2. \nHow much posterior probability lies above p = 0.8? \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsamples |> \n  filter(hypothezised_p_of_water > 0.8) |>  \n  summarise(perc_p = n()/n_samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1  0.112\n```\n:::\n:::\n\n\n# 3E3. \nHow much posterior probability lies between p = 0.2 and p = 0.8? \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsamples |> \n  filter(hypothezised_p_of_water < 0.8 & hypothezised_p_of_water > 0.2) |> \n  summarise(perc_p = n()/n_samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1  0.888\n```\n:::\n\n```{.r .cell-code}\n# or:\nsamples |> \n  filter(between(hypothezised_p_of_water, 0.2, 0.8)) |> \n  summarise(perc_p = n()/n_samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1  0.888\n```\n:::\n:::\n\n\n\n# 3E4. \n20% of the posterior probability lies below which value of p? \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nquantile(samples$hypothezised_p_of_water, probs = 0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      20% \n0.5185185 \n```\n:::\n:::\n\n\n\n#3E5. \n20% of the posterior probability lies above which value of p? \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nquantile(samples$hypothezised_p_of_water, probs = 0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      80% \n0.7557558 \n```\n:::\n:::\n\n\n\n# 3E6. \nWhich values of p contain the narrowest interval equal to 66% of the posterior probability? \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmode_hdi(samples$hypothezised_p_of_water, .width = 0.66)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          y      ymin      ymax .width .point .interval\n1 0.6559935 0.5205205 0.7877878   0.66   mode       hdi\n```\n:::\n:::\n\n\n\n# 3E7. \nWhich values of p contain 66% of the posterior probability, assuming equal posterior probability both below and above the interval?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# 33% of the posterior must be outside, 17.5% on each side of the distribution\nquantile(samples$hypothezised_p_of_water, probs = c(0.175, .825))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    17.5%     82.5% \n0.5045045 0.7667668 \n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# p_grid is a sequence of all possible values from percentage of water on planet\nn_water = 8\nn_tosses = 15\n\nd <- \n    tibble(p_grid = seq(from = 0, to = 1, length.out = 1000),\n           prior  = 1) %>%                                       # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = p_grid)) %>%  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) %>%             # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\n\n\nd |> ggplot(aes(x = p_grid, y = posterior)) + geom_line()\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' fig-pos='H' width=4200}\n:::\n\n```{.r .cell-code}\nn_samples <- 10000\nset.seed(3)\n\nsamples <- d %>% \n  sample_n(size = n_samples, weight = posterior, replace = T)\n\n\n\nn_dummy_water <- rbinom(5000, size = n_tosses, prob = 0.7)\n\nn_draws <- 1e5\n\nsimulate_binom <- function(n, probability) {\n  set.seed(3)\n  rbinom(n_draws, size = n, prob = probability) \n}\n\nd <-\n  crossing(n_tosses          = c(3, 6, 100),\n           probability = c(.3, .6, .9)) %>% \n  mutate(draws = map2(n_tosses, probability, simulate_binom)) %>% \n  ungroup() %>% \n  mutate(n_tosses           = str_c(\"n tosses = \", n_tosses),\n         probability = str_c(\"p = \", probability)) %>% \n  unnest(draws)\n\n\n\n\nd %>% \n  ggplot(aes(x = draws)) +\n  geom_histogram(binwidth = 1, center = 0,\n                 color = \"grey92\", linewidth = 1/10) +\n  scale_x_continuous(\"dummy water count\",\n                     breaks = seq(from = 0, to = 100, by = 2)) +\n  ylab(\"frequency\") +\n  coord_cartesian(xlim = c(0, 100)) +\n  theme(panel.grid = element_blank()) +\n  facet_grid(n_tosses ~ probability)\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/unnamed-chunk-8-2.png){fig-align='center' fig-pos='H' width=4200}\n:::\n\n```{.r .cell-code}\nw <- rbinom(1e4, size = 9, prob = samples$p_grid)\nmean(w == 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1825\n```\n:::\n:::\n\n\n# 3M5\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nn_water = 8\nn_tosses = 15\n\nd <- tibble(p_grid = seq(from = 0, to = 1, length.out = 1000),\n           prior  = case_when(p_grid < 0.5 ~ 0, \n                              p_grid >= 0.5 ~ 0.1)) %>%                                       # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = p_grid)) %>%  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) %>%             # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\n\n\nd |> ggplot(aes(x = p_grid, y = posterior)) + geom_line()\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/3m5-1.png){fig-align='center' fig-pos='H' width=4200}\n:::\n\n```{.r .cell-code}\nn_samples <- 10000\nset.seed(3)\n\nsamples <- d %>% \n  sample_n(size = n_samples, weight = posterior, replace = T)\n\n# 1: post-prob < 0.2\nmean(samples$p_grid < 0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\nmean(samples$p_grid > 0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.013\n```\n:::\n\n```{.r .cell-code}\nmean(between(samples$p_grid, left = 0.2, right = 0.8))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.987\n```\n:::\n\n```{.r .cell-code}\nquantile(samples$p_grid, probs = 0.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      20% \n0.5373373 \n```\n:::\n\n```{.r .cell-code}\nmode_hdi(samples$p_grid, .width = .66)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          y      ymin      ymax .width .point .interval\n1 0.5120761 0.5015015 0.6356356   0.66   mode       hdi\n```\n:::\n\n```{.r .cell-code}\nquantile(samples$p_grid, probs = c(0.175, 0.825))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    17.5%     82.5% \n0.5325325 0.6806807 \n```\n:::\n\n```{.r .cell-code}\n# Draw 10,000 samples from the grid approximation from above. Then use the sample to calculate the 90% HPDI for p.\n\nmode_hdi(samples$p_grid, .width = 0.9)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          y      ymin      ymax .width .point .interval\n1 0.5120761 0.5015015 0.7197197    0.9   mode       hdi\n```\n:::\n\n```{.r .cell-code}\n# Construct a posterior predictive check for this model and data. The means simulate the distribution of samples, averaging over the posterior uncertainty in p. What is the probability of observing 8 water in 15 tosses?\n\ndummy_tosses <- rbinom(1000, 15, prob = samples$p_grid)\n\nmean(dummy_tosses == 8)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.158\n```\n:::\n\n```{.r .cell-code}\n# Using the posterior distribution constructed from the new (8/15) data, now calculate the probability of observing 6 water in 9 tosses.\n\ndummy_tosses <- rbinom(1000, 9, prob = samples$p_grid)\n\nmean(dummy_tosses == 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.263\n```\n:::\n\n```{.r .cell-code}\nd |>  ggplot(aes(x = p_grid, y= posterior))  + geom_line()\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/3m5-2.png){fig-align='center' fig-pos='H' width=4200}\n:::\n\n```{.r .cell-code}\nhist(samples$p_grid)\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/3m5-3.png){fig-align='center' fig-pos='H' width=4200}\n:::\n:::\n\n\n#3M6. Suppose you want to estimate the Earth's proportion of water very precisely. Specifically, you want the 99% percentile interval of the posterior distribution of p to be only 0.05 wide. This means the distance between the upper and lower bound of the interval should be 0.05. How many times will you have to toss the globe to do this?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#generating the \"real\" data\nn_tosses <- 2201\nn_water <- rbinom(1, n_tosses, prob = 0.7) # real observed n_waters\n\n# getting posterior => best guess of proportion\nd <- tibble(p_grid = seq(from = 0, to = 1, length.out =1000), \n            prior = 1, \n            likelyhood = dbinom(n_water, n_tosses, prob = p_grid), \n            posterior = likelyhood*prior / (sum(likelyhood*prior)))\n\n# samling from the posterior to simulate redoing the experiment 10000 times\nsamples <- sample(d$p_grid,size = 10000, prob = d$posterior, replace = T )\n\n\n# what is the 99% hdi?\na <- mode_hdi(samples, .width = 0.99)\n\na$ymax - a$ymin\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.05005006\n```\n:::\n:::\n\n\n# hard problems\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbirth1 <- c(1,0,0,0,1,1,0,1,0,1,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,0, 0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0, 1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,1,1,0, 1,0,1,1,1,0,1,1,1,1) \n\nbirth2 <- c(0,1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0, 1,1,1,0,1,1,1,0,1,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,0,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,1, 0,0,0,1,1,1,0,0,0,0)\n\nall_births <- c(birth1, birth2)\n```\n:::\n\n\n# 3H1.\n\nUsing grid approximation, compute the posterior distribution for the probability of a birth being a boy. Assume a uniform prior probability. Which parameter value maximizes the posterior probability?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nn_births <- length(all_births)\nn_boys <- sum(birth1) + sum(birth2)\n\nd <- tibble(p_boy_hypothetical = seq(from = 0, to  = 1, length.out = 1000), \n            prior_boy = 0.01, \n            likelyhood = dbinom(x = n_boys, size = n_births, prob = p_boy_hypothetical), \n            post_unst = likelyhood * prior_boy, \n            standartization_term = sum(likelyhood * prior_boy),\n            posterior = post_unst / standartization_term)\n\n\n\nd |> filter(posterior == max(d$posterior))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  p_boy_hypothetical prior_boy likelyhood post_unst standartization_term\n               <dbl>     <dbl>      <dbl>     <dbl>                <dbl>\n1              0.555      0.01     0.0567  0.000567               0.0497\n# ℹ 1 more variable: posterior <dbl>\n```\n:::\n\n```{.r .cell-code}\nd |> pivot_longer(names_to = \"value_name\", values_to = \"value\", 2:6) |> \n  ggplot(aes(x = p_boy_hypothetical, y = value, color = value_name)) + geom_point()\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' fig-pos='H' width=4200}\n:::\n:::\n\n\n# 3H2.\n\nUsing the sample function, draw 10,000 random parameter values from the posterior distribution you calculated above. Use these samples to estimate the 50%, 89%, and 97% highest posterior density intervals.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsamples <- sample(d$p_boy_hypothetical, size = 1e4, prob = d$posterior, replace = T)\n\nmode_hdi(samples, .width = c(0.5, 0.89, 0.97))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          y      ymin      ymax .width .point .interval\n1 0.5579079 0.5305305 0.5775776   0.50   mode       hdi\n2 0.5579079 0.5005005 0.6106106   0.89   mode       hdi\n3 0.5579079 0.4794795 0.6306306   0.97   mode       hdi\n```\n:::\n:::\n\n\n#3H3. Use rbinom to simulate 10,000 replicates of 200 births. You should end up with 10,000 numbers, each one a count of boys out of 200 births. Compare the distribution of predicted numbers of boys to the actual count in the data (111 boys out of 200 births). There are many good ways to visualize the simulations, but the dens command (part of the rethinking package) is prbably the easiest way in this case. Does it look like the model fits the data well? That is, does the distribution of predictions include the actual observation as a central, likely outcome?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#simulating 10'000 cohorts of 200 births to get the number of births from the posterior of estimations of the most likely true percentage of boys\ndummy_data_n_boys<- rbinom(1e5, size = 200, prob = samples)\n\nbreak_func <- function(x) {\n  length(seq(min(x), max(x), by = 1)) + 1\n}\n\nggplot() + \n  stat_histinterval(aes(x = dummy_data_n_boys), .width = c(0.66, 0.89), breaks = break_func) +\n  geom_vline(aes(xintercept = n_boys), linetype = \"dashed\", color = \"red\") +\n  labs(x = \"Number of Boys\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' fig-pos='H' width=4200}\n:::\n:::\n\n\n# 3H4.\n\nNow compare 10,000 counts of boys from 100 simulated first borns only to the number of boys in the first births, birth1. How does the model look in this light?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndummy_data_n_boys<- rbinom(1e5, size = 100, prob = samples)\n\nbreak_func <- function(x) {\n  length(seq(min(x), max(x), by = 1)) + 1\n}\n\nggplot() + stat_histinterval(aes(x = dummy_data_n_boys), .width = c(0.66, 0.89), breaks = break_func) +\n  geom_vline(aes(xintercept = sum(birth1)), linetype = \"dashed\", color = \"red\") +\n  labs(x = \"Number of Boys\", y = \"Density\")\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' fig-pos='H' width=4200}\n:::\n:::\n\n\n# 3H5.\n\nThe model assumes that sex of first and second births are independent. To check this assumption, focus now on second births that followed female first borns. Compare 10,000 simulated counts of boys *(coming from the original model which assumes independence)* to only those second births that followed girls. To do this correctly, you need to count the number of first borns who were girls and simulate that many births, 10,000 times. Compare the counts of boys in your simulations to the actual observed count of boys following girls. How does the model look in this light? Any guesses what is going on in these data?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndummy_data_n_boys<- rbinom(1e5, size = 100, prob = samples)\n\nn_girl1 <- sum(birth1 == 0)\n\ndummy_data_boys_after_girls <- rbinom(n = 1e5, size = n_girl1, prob = samples)\n\nbirths_data <- tibble(birth1 = birth1, \n                      birth2 = birth2) |> \n  mutate(boy_after_girl = case_when(birth1 == 0 & birth2 == 1 ~ 1, \n                                    .default = 0))\n\nsum(births_data$boy_after_girl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 39\n```\n:::\n\n```{.r .cell-code}\nggplot() +\n   geom_histogram(aes(x = dummy_data_boys_after_girls))  + \n  geom_vline(xintercept = sum(births_data$boy_after_girl))\n```\n\n::: {.cell-output-display}\n![](Chapter3_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' fig-pos='H' width=4200}\n:::\n:::\n",
    "supporting": [
      "Chapter3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}