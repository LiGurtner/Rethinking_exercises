[
  {
    "objectID": "Chapter3.html",
    "href": "Chapter3.html",
    "title": "Chapter3",
    "section": "",
    "text": "The Easy problems use the samples from the posterior distribution for the globe tossing example. This code will give you a specific set of samples, so that you can check your answers exactly. Use the values in samples to answer the questions that follow.\n\n# hypothezised_p_of_water is a sequence of all possible values from percentage of water on planet\nn_water = 6\nn_tosses = 9\n\nd_e <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out = 1000),\n           prior  = 1) |> # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = hypothezised_p_of_water)) |>  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) |> # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\n\nn_samples <- 10000\nset.seed(100)\n\nsamples_e <- d_e |> \n  sample_n(size = n_samples, weight = posterior, replace = T) # sampling entire lines from d_e. the \"posterior\" argument gives every line in d_e the probability of being chosen for the samples tibble\n\n\n\nd_e |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n\n\n\n\n\n\n\nsamples_e |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line() # samples for the easy questions\n\n\n\n\n\n\n\n\nThe two distributions look similar. However, as n_samples becomes small, the shape of samples$posterior becomes less smooth.\n\n3E1.\nHow much posterior probability lies below p = 0.2?\n\nsamples_e |> \n  filter(hypothezised_p_of_water < 0.2) |>  # all the p's < 0.2\n  summarise(perc_p = n()/n_samples) # get percentage of all p's < 0.2\n\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1 0.0004\n\n\n\n\n3E2.\nHow much posterior probability lies above p = 0.8?\n\nsamples_e |> \n  filter(hypothezised_p_of_water > 0.8) |>  \n  summarise(perc_p = n()/n_samples)\n\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1  0.112\n\n\n\n\n3E3.\nHow much posterior probability lies between p = 0.2 and p = 0.8?\n\nsamples_e |> \n  filter(hypothezised_p_of_water < 0.8 & hypothezised_p_of_water > 0.2) |> \n  summarise(perc_p = n()/n_samples)\n\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1  0.888\n\n# or:\nsamples_e |> \n  filter(between(hypothezised_p_of_water, 0.2, 0.8)) |> \n  summarise(perc_p = n()/n_samples)\n\n# A tibble: 1 × 1\n  perc_p\n   <dbl>\n1  0.888\n\n\n\n\n3E4.\n20% of the posterior probability lies below which value of p?\n\nquantile(samples_e$hypothezised_p_of_water, probs = 0.2)\n\n      20% \n0.5185185 \n\n\n#3E5. 20% of the posterior probability lies above which value of p?\n\nquantile(samples_e$hypothezised_p_of_water, probs = 0.8)\n\n      80% \n0.7557558 \n\n\n\n\n3E6.\nWhich values of p contain the narrowest interval equal to 66% of the posterior probability?\n\nmode_hdi(samples_e$hypothezised_p_of_water, .width = 0.66)\n\n          y      ymin      ymax .width .point .interval\n1 0.6559935 0.5205205 0.7877878   0.66   mode       hdi\n\n\n\n\n3E7.\nWhich values of p contain 66% of the posterior probability, assuming equal posterior probability both below and above the interval?\n\n# 33% of the posterior must be outside, 17.5% on each side of the distribution\nquantile(samples_e$hypothezised_p_of_water, probs = c(0.175, .825))\n\n    17.5%     82.5% \n0.5045045 0.7667668 \n\n\n\n\n3M1.\nSuppose the globe tossing data had turned out to be 8 water in 15 tosses. Construct the posterior distribution, using grid approximation. Use the same flat prior as before.\n\n# hypothezised_p_of_water is a sequence of all possible values from percentage of water on planet\nn_water = 8\nn_tosses = 15\n\nd_m <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out = 1000),\n           prior  = 1) |> # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = hypothezised_p_of_water)) |>  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) |> # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\nd_m |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n\n\n\n\n\n\n\n\n\n\n3M2.\nDraw 10,000 samples from the grid approximation from above. Then use the samples to calculate the 90% HPDI for p. \n\nn_samples <- 10000\nset.seed(100)\n\nsamples_m <- d_m %>% \n  sample_n(size = n_samples, weight = posterior, replace = T)\n\n\nmode_hdi(samples_m$hypothezised_p_of_water, .probs = c(0.05, 0.95))\n\n          y      ymin      ymax .width .point .interval\n1 0.5285295 0.3083083 0.7627628   0.95   mode       hdi\n\nsamples_m |> ggplot(aes(x = hypothezised_p_of_water, y = posterior)) + geom_line()\n\n\n\n\n\n\n\n\n\n\n3M3.\nConstruct a posterior predictive check for this model and data. This means simulate the distribution of samples, averaging over the posterior uncertainty in p. What is the probability of observing 8 water in 15 tosses?\n=> here, we use code from Solomon Kurz’ translation of the textbook, section 3.3.2\n\nn_dummy_water <- tibble(n_waters = rbinom(n_samples, # same size in samples_m\n                                          size = n_tosses, # 15\n                                          prob = samples_m$hypothezised_p_of_water)) # create 10000 simulated observed water in n_tosses, with the actual percentage of water coming from the p's sampled proportionally from the posterior \n\n\n# how many of the dummy-data results show 8 waters in 15 tosses?\nmean(n_dummy_water$n_waters == 8)\n\n[1] 0.1499\n\nn_dummy_water %>% \n  ggplot(aes(x = n_waters)) +\n  geom_histogram(binwidth = 1, center = 0,\n                 color = \"grey92\") +\n  scale_x_continuous(\"dummy water count\") +\n  ylab(\"frequency\") \n\n\n\n\n\n\n\n\n\n\n3M4.\nUsing the posterior distribution constructed from the new (8/15) data, now calculate the probability of observing 6 water in 9 tosses.\n\nn_dummy_water <- tibble(n_waters = rbinom(n_samples, # same size in samples_m\n                                          size = 9, # 15\n                                          prob = samples_m$hypothezised_p_of_water)) # create 10000 simulated observed water in n_tosses, with the actual percentage of water coming from the p's sampled proportionally from the posterior \n\n\n# how many of the dummy-data results show 6 waters in 9 tosses, but taking the posterior from the 8/15 data?\nmean(n_dummy_water$n_waters == 6)\n\n[1] 0.1842\n\nn_dummy_water %>% \n  ggplot(aes(x = n_waters)) +\n  geom_histogram(binwidth = 1, center = 0,\n                 color = \"grey92\") +\n  scale_x_continuous(\"dummy water count\") +\n  ylab(\"frequency\") \n\n\n\n\n\n\n\n\n\n\n3M5\nStart over at 3M1, but now use a prior that is zero below p = 0.5 and a constant above p = 0.5. This corresponds to prior information that a majority of the Earth’s surface is water. Repeat each problem above and compare the inferences (using both priors) to the true value p = 0.7.\n\nn_water = 8\nn_tosses = 15\n\nd_m2 <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out = 1000),\n           prior  = case_when(hypothezised_p_of_water < 0.5 ~ 0, \n                              hypothezised_p_of_water >= 0.5 ~ 0.1)) %>%                                       # define prior\n    mutate(likelihood = dbinom(n_water, size = n_tosses, prob = hypothezised_p_of_water)) %>%  # compute likelihood at each value in grid\n    mutate(unstd_posterior = likelihood * prior) %>%             # compute product of likelihood and prior\n    mutate(posterior = unstd_posterior / sum(unstd_posterior))   # standardize the posterior, so it sums to 1\n\nn_samples <- 10000\nset.seed(3)\n\nsamples_m2 <- d_m2 %>% \n  sample_n(size = n_samples, weight = posterior, replace = T)\n\n# re-doing also the easy ones, for the sake of completeness\n#: post-prob < 0.2\nmean(samples_m2$hypothezised_p_of_water < 0.2)\n\n[1] 0\n\nmean(samples_m2$hypothezised_p_of_water > 0.8)\n\n[1] 0.013\n\nmean(between(samples_m2$hypothezised_p_of_water, left = 0.2, right = 0.8))\n\n[1] 0.987\n\nquantile(samples_m2$hypothezised_p_of_water, probs = 0.2)\n\n      20% \n0.5373373 \n\nmode_hdi(samples_m2$hypothezised_p_of_water, .width = .66)\n\n          y      ymin      ymax .width .point .interval\n1 0.5120761 0.5015015 0.6356356   0.66   mode       hdi\n\nquantile(samples_m2$hypothezised_p_of_water, probs = c(0.175, 0.825))\n\n    17.5%     82.5% \n0.5325325 0.6806807 \n\n# Draw 10,000 samples from the grid approximation from above. Then use the sample to calculate the 90% HPDI for p.\n\nmode_hdi(samples_m2$hypothezised_p_of_water, .width = 0.9)\n\n          y      ymin      ymax .width .point .interval\n1 0.5120761 0.5015015 0.7197197    0.9   mode       hdi\n\n# Construct a posterior predictive check for this model and data. The means simulate the distribution of samples, averaging over the posterior uncertainty in p. What is the probability of observing 8 water in 15 tosses?\n\ndummy_tosses <- rbinom(1000, 15, prob = samples_m2$hypothezised_p_of_water)\n\nmean(dummy_tosses == 8)\n\n[1] 0.158\n\n# Using the posterior distribution constructed from the new (8/15) data, now calculate the probability of observing 6 water in 9 tosses.\n\ndummy_tosses <- rbinom(1000, 9, prob = samples_m2$hypothezised_p_of_water)\n\nmean(dummy_tosses == 6)\n\n[1] 0.263\n\nd_m2 |>  ggplot(aes(x = hypothezised_p_of_water, y= posterior))  + geom_line()\n\n\n\n\n\n\n\nhist(samples_m2$hypothezised_p_of_water)\n\n\n\n\n\n\n\n\n\n\n3M6.\nSuppose you want to estimate the Earth’s proportion of water very precisely. Specifically, you want the 99% percentile interval of the posterior distribution of p to be only 0.05 wide. This means the distance between the upper and lower bound of the interval should be 0.05. How many times will you have to toss the globe to do this?\n\n# strategy: trying out until the mode_hdi is as small as required\n#generating the \"real\" data\nn_tosses <- 2201 # play around with this number\nn_water <- rbinom(1, n_tosses, prob = 0.7) # fake observations of earth\n\n# getting posterior => best guess of proportion\nd_m3 <- tibble(hypothezised_p_of_water = seq(from = 0, to = 1, length.out =1000), \n            prior = 1, \n            likelyhood = dbinom(n_water, n_tosses, prob = hypothezised_p_of_water), \n            posterior = likelyhood*prior / (sum(likelyhood*prior)))\n\n# sampling from the posterior to simulate redoing the experiment 10000 times\nsamples_m3 <- sample(d_m3$hypothezised_p_of_water,size = 10000, prob = d_m3$posterior, replace = T )\n\n\n# what is the 99% hdi?\na <- mode_hdi(samples_m3, .width = 0.99)\na$ymax - a$ymin\n\n[1] 0.05005006\n\n\n\n\n3H1.\nUsing grid approximation, compute the posterior distribution for the probability of a birth being a boy. Assume a uniform prior probability. Which parameter value maximizes the posterior probability?\n\nbirth1 <- c(1,0,0,0,1,1,0,1,0,1,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,0, 0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0, 1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,1,1,0, 1,0,1,1,1,0,1,1,1,1) \n\nbirth2 <- c(0,1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0, 1,1,1,0,1,1,1,0,1,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1, 1,1,1,0,1,1,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,0,0,1,1, 0,0,0,1,1,1,0,0,0,0)\n\nall_births <- c(birth1, birth2)\n\n\nn_births <- length(all_births)\nn_boys <- sum(birth1) + sum(birth2)\n\nd_h <- tibble(p_boy_hypothetical = seq(from = 0, \n                                     to  = 1,\n                                     length.out = 1000), \n            prior_boy = 0.01, \n            likelyhood = dbinom(x = n_boys, \n                                size = n_births, \n                                prob = p_boy_hypothetical), \n            post_unst = likelyhood * prior_boy, \n            standartization_term = sum(likelyhood * prior_boy),\n            posterior = post_unst / standartization_term)\n\n\n# Which parameter value maximizes the posterior probability?\nd_h |> filter(posterior == max(d_h$posterior))\n\n# A tibble: 1 × 6\n  p_boy_hypothetical prior_boy likelyhood post_unst standartization_term\n               <dbl>     <dbl>      <dbl>     <dbl>                <dbl>\n1              0.555      0.01     0.0567  0.000567               0.0497\n# ℹ 1 more variable: posterior <dbl>\n\nd_h |> pivot_longer(names_to = \"value_name\", values_to = \"value\", 2:6) |> \n  ggplot(aes(x = p_boy_hypothetical, y = value, color = value_name)) + geom_point()+\n  scale_color_manual(values = wes_palette(\"Darjeeling2\", n = 5, type = \"discrete\"))\n\n\n\n\n\n\n\n\n\n\n3H2.\nUsing the sample function, draw 10,000 random parameter values from the posterior distribution you calculated above. Use these samples to estimate the 50%, 89%, and 97% highest posterior density intervals.\n\nsamples_h <- sample(d_h$p_boy_hypothetical, size = 1e4, prob = d_h$posterior, replace = T)\n\nmode_hdi(samples_h, .width = c(0.5, 0.89, 0.97))\n\n          y      ymin      ymax .width .point .interval\n1 0.5579079 0.5305305 0.5775776   0.50   mode       hdi\n2 0.5579079 0.5005005 0.6106106   0.89   mode       hdi\n3 0.5579079 0.4794795 0.6306306   0.97   mode       hdi\n\n\n#3H3. Use rbinom to simulate 10,000 replicates of 200 births. You should end up with 10,000 numbers, each one a count of boys out of 200 births. Compare the distribution of predicted numbers of boys to the actual count in the data (111 boys out of 200 births). There are many good ways to visualize the simulations, but the dens command (part of the rethinking package) is probably the easiest way in this case. Does it look like the model fits the data well? That is, does the distribution of predictions include the actual observation as a central, likely outcome?\n\n#simulating 10'000 cohorts 200 births to get the number of births from the posterior of estimations of the most likely true percentage of boys\ndummy_data_n_boys<- rbinom(1e5, size = 200, prob = samples_h)\n\nbreak_func <- function(x) {\n  length(seq(min(x), max(x), by = 1)) + 1\n}\n\nggplot() + \n  stat_histinterval(aes(x = dummy_data_n_boys), .width = c(0.66, 0.89), breaks = break_func) +\n  geom_vline(aes(xintercept = n_boys), linetype = \"dashed\", color = \"red\") +\n  labs(x = \"Number of Boys\", y = \"Density\")\n\n\n\n\n\n\n\n\n\n\n3H4.\nNow compare 10,000 counts of boys from 100 simulated first borns only to the number of boys in the first births, birth1. How does the model look in this light?\n\ndummy_data_n_boys<- rbinom(1e5, size = 100, prob = samples_h)\n\nbreak_func <- function(x) {\n  length(seq(min(x), max(x), by = 1)) + 1\n}\n\nggplot() + stat_histinterval(aes(x = dummy_data_n_boys), .width = c(0.66, 0.89), breaks = break_func) +\n  geom_vline(aes(xintercept = sum(birth1)), linetype = \"dashed\", color = \"red\") +\n  labs(x = \"Number of Boys\", y = \"Density\")\n\n\n\n\n\n\n\n\n\n\n3H5.\nThe model assumes that sex of first and second births are independent. To check this assumption, focus now on second births that followed female first borns. Compare 10,000 simulated counts of boys (coming from the original model which assumes independence) to only those second births that followed girls. To do this correctly, you need to count the number of first borns who were girls and simulate that many births, 10,000 times. Compare the counts of boys in your simulations to the actual observed count of boys following girls. How does the model look in this light? Any guesses what is going on in these data?\n\ndummy_data_n_boys<- rbinom(1e5, size = 100, prob = samples_h)\n\nn_girl1 <- sum(birth1 == 0)\n\ndummy_data_boys_after_girls <- rbinom(n = 1e5, size = n_girl1, prob = samples_h)\n\nbirths_data <- tibble(birth1 = birth1, \n                      birth2 = birth2) |> \n  mutate(boy_after_girl = case_when(birth1 == 0 & birth2 == 1 ~ 1, \n                                    .default = 0))\n\ntrue_n_boys_after_girl <- sum(births_data$boy_after_girl)\n\nggplot() +\n   geom_histogram(aes(x = dummy_data_boys_after_girls))  + \n  geom_vline(xintercept = true_n_boys_after_girl)\n\n\n\n\n\n\n\n\nConclusion: The model, assuming independence (i.e. drawing from the posterior of all the births sample_h) would predict much fewer boys in the second births. So either having a girl alters something biological such that conception of boys becomes more likely, or families who have already a girls are more likely to abort female fetuses and keep the male ones more often."
  },
  {
    "objectID": "Chapter2.html",
    "href": "Chapter2.html",
    "title": "Chapter2",
    "section": "",
    "text": "2E1.\nWhich of the expressions below correspond to the statement: the probability of rain on Monday?\n\nPr(rain)\n\nPr(rain|Monday) *\nPr(Monday|rain)\n\nPr(rain, Monday)/ Pr(Monday) *\n\n\n\n2E2.\nWhich of the following statements corresponds to the expression: Pr(Monday|rain)?\n\nThe probability of rain on Monday.\nThe probability of rain, given that it is Monday.\nThe probability that it is Monday, given that it is raining. *\nThe probability that it is Monday and that it is raining.\n\n\n\n2E3.\nWhich of the expressions below correspond to the statement: the probability that it is Monday, given that it is raining?\n\nPr(Monday|rain) *\nPr(rain|Monday)\nPr(rain|Monday) Pr(Monday)\nPr(rain|Monday) Pr(Monday)/ Pr(rain) *\nPr(Monday|rain) Pr(rain)/ Pr(Monday)\n\n\n\n2E4.\nThe Bayesian statistician Bruno de Finetti (1906–1985) began his 1973 book on probability theory with the declaration: “PROBABILITY DOES NOT EXIST.” The capitals appeared in the original, so I imagine de Finetti wanted us to shout this statement. What he meant is that probability is a device for describing uncertainty from the perspective of an observer with limited knowledge; it has no objective reality. Discuss the globe tossing example from the chapter, in light of this statement. What does it mean to say “the probability of water is 0.7”?\n=> Given our knowledge / ignorance about the true state of water on the planet, we think that 70% of the planet are covered in water.\n\n\n2M1.\nRecall the globe tossing model from the chapter. Compute and plot the grid approximate posterior distribution for each of the following sets of observations. In each case, assume a uniform prior for p.\n\nW, W, W\nW, W, W, L\nL, W, W, L, W, W, W\n\n\ngrit_length <- 30 # steps of hypothetical water coverage on planet\nn_water <- 3 # tossig result, adapt for (2) and (3)\nn_total <- 3 # n tosses , adapt for (2) and (3)\n\n# create data\nd <- tibble(hypothesized_true_p_of_water = seq(from = 0, to = 1, length = grit_length), \n            prior = 1/grit_length) |> #this could also be 1 or any other constant \n  mutate(likelyhood = dbinom(n_water, size = n_total, prob = hypothesized_true_p_of_water)) |>  # likelyhood of observing the \"grid value\" p given a prior at this location\n  mutate(unstand_posterior = likelyhood * prior, \n         stand_posterior = unstand_posterior / sum(unstand_posterior)) |> \n  pivot_longer(names_to = \"variable\", values_to = \"probability\", 2:5) # for plotting in the next step\n\n\nd |> ggplot(aes(x = hypothesized_true_p_of_water, y = probability, color = variable)) +\n  geom_point() + \n  geom_line() + \n  ggtitle(paste(\"probability of seeing\", n_water, \"waters in\", n_total, \"world tosses.\", sep = \" \")) +\n  scale_color_manual(values = wes_palette(\"Darjeeling2\", n = 4, type = \"discrete\"))\n\n\n\n\n\n\n\n\n\n\n2M2.\nNow assume a prior for p that is equal to zero when p < 0.5 and is a positive constant when p ≥ 0.5. Again compute and plot the grid approximate posterior distribution for each of the sets of observations in the problem just above.\n\nW, W, W\nW, W, W, L\nL, W, W, L, W, W, W\n\n\ngrit_length <- 20# steps of hypothetical water coverage on planet\nn_water <- 3 # adapt for (2) and (3)\nn_total <- 3# adapt for (2) and (3)\nsequence <- seq(from = 0, to = 1, length = grit_length)\ngrit_bigger_than_0.5 <- sum(sequence >= 0.5) #this could also be 1 or any other constant \n\n# create data\nd <- tibble(hypothesized_true_p_of_water = seq(from = 0, to = 1, length = grit_length), \n            prior = case_when(hypothesized_true_p_of_water < 0.5 ~ 0, \n                              hypothesized_true_p_of_water >= 0.5 ~ 1/grit_bigger_than_0.5)) |> \n  mutate(likelyhood = dbinom(n_water, size = n_total, prob = hypothesized_true_p_of_water)) |>  # likelyhood of observing the grid value given a prior at this location\n  mutate(unstand_posterior = likelyhood * prior, \n         stand_posterior = unstand_posterior / sum(unstand_posterior)) |> \n  pivot_longer(names_to = \"variable\", values_to = \"probability\", 2:5) # for plotting\n\n\nd |> ggplot(aes(x = hypothesized_true_p_of_water, y = probability, color = variable)) +\n  geom_point() + \n  geom_line() + \n  ggtitle(paste(\"probability of seeing\", n_water, \"waters in\", n_total, \"world tosses.\", sep = \" \"))  +\n  scale_color_manual(values = wes_palette(\"Darjeeling2\", n = 4, type = \"discrete\"))\n\n\n\n\n\n\n\n\nNote how the likelyhood does not care about the prior: it is > 0 even at proportions of water that we know are not possible according to prior knowledge.\n\n\n2M3.\nSuppose there are two globes, one for Earth and one for Mars. The Earth globe is 70% covered in water. The Mars globe is 100% land. Further suppose that one of these globes—you don’t know which—was tossed in the air and produced a “land” observation. Assume that each globe was equally likely to be tossed. Show that the posterior probability that the globe was the Earth, conditional on seeing “land” (Pr(Earth|land)), is 0.23.\ninformation in the text:\nIf I toss earth, Pr(land) = 0.3 If I toss mars, Pr(land) = 1\nPr(tossing_earth) = Pr(tossing_mars) = 0.5\nTo be shown: Pr(Earth|land) = (Pr(land|Earth) * Pr(earth)) / Pr(earth and land) = 0.23\n\np_e = 0.5\np_m = 0.5\n\np_l_given_e = 0.3\np_l_given_m = 1\n\np_e_given_l <- (p_l_given_e * p_e) / (p_e * p_l_given_e + p_m * p_l_given_m)\n\np_e_given_l\n\n[1] 0.2307692\n\n\n\n\n2M4.\nSuppose you have a deck with only three cards. Each card has two sides, and each side is either black or white. One card has two black sides. The second card has one black and one white side. The third card has two white sides. Now suppose all three cards are placed in a bag and shuffled. Someone reaches into the bag and pulls out a card and places it flat on a table. A black side is shown facing up, but you don’t know the color of the side facing down. Show that the probability that the other side is also black is 2/3. Use the counting method (Section 2 of the chapter 2) to approach this problem. This means counting up the ways that each card could produce the observed data (a black side facing up on the table).\n\n\n\n\n\n\ncounting possibilities\n\n\n\n\n\nall-white card => 0\nb/w card => 1\nall-black card => 2\n=> total possibilities of getting the result = 3\n=> 2/3 of which are generated by the all-black card\n\n\n\n\n\n2M5.\nNow suppose there are four cards: B/B, B/W, W/W, and another B/B. Again suppose a card is drawn from the bag and a black side appears face up. Again calculate the probability that the other side is black.\n\n\n\n\n\n\ncounting possibilities\n\n\n\n\n\nall-white card => 0\nb/w card => 1\nall-black card 1 => 2\nall-black card 2 => 2\ntotal: 5 ways it can be black, 4/5 have a also black backside\n\n\n\n\n\n2M6.\nImagine that black ink is heavy, and so cards with black sides are heavier than cards with white sides. As a result, it’s less likely that a card with black sides is pulled from the bag. So again assume there are three cards: B/B, B/W, and W/W. After experimenting a number of times, you conclude that for every way to pull the B/B card from the bag, there are 2 ways to pull the B/W card and 3 ways to pull the W/W card. Again suppose that a card is pulled and a black side appears face up. Show that the probability the other side is black is now 0.5. Use the counting method, as before.\n\n\n\n\n\n\ncounting probabilities\n\n\n\n\n\nways to get a black card:\nall-white card => 0 * 3 (sampling) = 0\nB/W card => 1 * 2 (sampling) = 2\nB/B card => 2 * 1 (sampling) = 2\ntotal 4\ncoming from the B/B card = 2/4 = 0.5\n\n\n\n\n\n2M7.\nAssume again the original card problem, with a single card showing a black side face up. Before looking at the other side, we draw another card from the bag and lay it face up on the table. The face that is shown on the new card is white. Show that the probability that the first card, the one showing a black side, has black on its other side is now 0.75. Use the counting method, if you can. Hint: Treat this like the sequence of globe tosses, counting all the ways to see each observation, for each possible first card.\nww bw bb\n\n\n\n\n\n\ncounting probabilities\n\n\n\n\n\nRound 1: ??\nRound 2: white\nto be found: p(Round 1 = black)\ndifferent ways the data could come about:\n\nif Round 1 = bw\n\nRound 2 = ww (side 1 & 2) => 1*2\n\nif Round 1 = bb (side 1 & 2)\n\nRound 2 = bw\nRound 2 = ww (side 1 & 2) => 2*3\n\n=> total ways of the data = 8 => out of these 8, 6 come from a Round 1 == bb card =>\n\np(round1 = bb) => 6/8 = 0.75\n\n\n\n\n\n2H1.\nSuppose there are two species of panda bear. Both are equally common in the wild and live in the same places. They look exactly alike and eat the same food, and there is yet no genetic assay capable of telling them apart. They differ however in their family sizes. Species A gives birth to twins 10% of the time, otherwise birthing a single infant. Species B births twins 20% of the time, otherwise birthing singleton infants. Assume these numbers are known with certainty, from many years of field research. Now suppose you are managing a captive panda breeding program. You have a new female panda of unknown species, and she has just given birth to twins. What is the probability that her next birth will also be twins?\np(t|A) = 0.1\np(t|B) = 0.2\np(A) = p(B) = 0.5\n\n# probability of the panda species\np_A <- 0.5\np_B <- 0.5\n\np_t_given_A <- 0.1 # likelyhood of twins per species\np_t_given_B <- 0.2\n\n# prob of having seen twins at birth 1\np_A_given_t1 <-  p_t_given_A * p_A / (p_A*p_t_given_A + p_B * p_t_given_B)\np_A_new_prior <- p_A_given_t1 # new prior bc we have seen a birth, and hence the old prior p_A was updated\n\n\np_B_given_t1 <-  p_t_given_B * p_B / (p_A*p_t_given_A + p_B * p_t_given_B)\np_B_new_prior <- p_B_given_t1\n\n# probability of getting twins again at birth 2 \np_t2_given_A <-  p_A_new_prior * p_t_given_A\n\np_t2_given_B <- p_B_new_prior * p_t_given_B\n\n\nresult <- p_t2_given_A + p_t2_given_B # the total prob of twins at birth 2, from both possible species combined\n\nresult\n\n[1] 0.1666667\n\n\n\n\n2H2.\nRecall all the facts from the problem above. Now compute the probability that the panda we have is from species A, assuming we have observed only the first birth and that it was twins.\n\np_A_given_t1\n\n[1] 0.3333333\n\n\n\n\n2H3.\nContinuing on from the previous problem, suppose the same panda mother has a second birth and that it is not twins, but a singleton infant. Compute the posterior probability that this panda is species A.\n\np_A_new_prior # knowledge from the first birth\n\n[1] 0.3333333\n\np_B_new_prior\n\n[1] 0.6666667\n\np_t_given_A <- 0.1 # probab of twins at any time\np_t_given_B <- 0.2\n\n\np_nt_given_A <- 1 - p_t_given_A # probab of having a not-twin\np_nt_given_B <- 1 - p_t_given_B\n\n\np_A_given_nt2 <- (p_nt_given_A * p_A_new_prior) / (p_nt_given_A * p_A_new_prior + p_nt_given_B * p_B_new_prior)\n\np_A_newest_prior <- p_A_given_nt2\n\n\n# for the sake of completeness\np_B_given_nt2 <- (p_nt_given_B * p_B_new_prior) / (p_nt_given_A * p_A_new_prior + p_nt_given_B * p_B_new_prior)#\n\np_B_newest_prior <- p_B_given_nt2\n\n\n\n2H4.\nA common boast of Bayesian statisticians is that Bayesian inference makes it easy to use all of the data, even if the data are of different types. So suppose now that a veterinarian comes along who has a new genetic test that she claims can identify the species of our mother panda. But the test, like all tests, is imperfect. This is the information you have about the test:\n• The probability it correctly identifies a species A panda is 0.8.\n• The probability it correctly identifies a species B panda is 0.65.\nThe vet administers the test to your panda and tells you that the test is positive for species A. First ignore your previous information from the births and compute the posterior probability that your panda is species A. Then redo your calculation, now using the birth data as well.\np(testA|A) = 0.8\np(testB|B) = 0.65\n\n# without the info from the births: \np_A <- 0.5\np_B <- 0.5\n\np_testA_given_A <- 0.8\np_testB_given_B <- 0.65\n\np_A_given_testA <- (p_testA_given_A * p_A ) / \n                   (p_testA_given_A * p_A  + # correct test result\n                      (1 - p_testB_given_B) * p_B) # false positive for A\np_A_given_testA\n\n[1] 0.6956522\n\n\n\n# now with the birth knowledge\n# we can use the final state of knowledge after 2 births from 2H3: \n# p_A_newest_prior\n# p_B_newest_prior\n\n\np_A_given_testA_2 <- (p_testA_given_A * p_A_newest_prior ) / \n                     (p_testA_given_A * p_A_newest_prior  + # correct test result\n                        (1-p_testB_given_B) * p_B_newest_prior) # false positive for A\n\np_A_given_testA_2\n\n[1] 0.5625"
  },
  {
    "objectID": "Chapter_template.html",
    "href": "Chapter_template.html",
    "title": "Chapter_template",
    "section": "",
    "text": "To include your chapter in the webpage, add the file-name of your chapter to _quarto.yml => sidebar => contents."
  },
  {
    "objectID": "Home.html",
    "href": "Home.html",
    "title": "Rethinking Stastistics - exercises",
    "section": "",
    "text": "Date: December 2024\n\nThis website documents the efforts to do the exercises of Richard McElreath’s “Rethinking statistics”, ed.2. We build on the following efforts:\nWe read: Rethinking Statistics, second edition. The book has been “translated” into using brms and the tidyverse by Solomon Kurz, and we rely on his code.\nThere is a lecture-series to go along with the book.\nTo the date of this writing, there are solutions to the excersises online, but only using the original rethinking package. In an effort to self-teach ourselves, we read the textbook and go through the exercises together. On this website, we collect our efforts.\nThe website was built using the qrtAcademic template.\n\nWho are we?\nA group of post-docs and phd-students at the Centre for Development and Environment at the University of Bern.\n\n\nDisclaimer\nWe do our best but will make mistakes along the way. If you find them, congratulations! Also, please tell us, so we can fix them.\n\n\nLicence\nCC-BC 4.0"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Contacts\nLilla Gurtner - lilla.gurtner2@unibe.ch\nSabina Perdazzini - sabina.pedrazzini@unibe.ch\nVincent Aggrey - vincent.aggrey@unibe.ch\nSimon Gude - simon.gude@unibe.ch"
  }
]